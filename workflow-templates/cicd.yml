name: Build and Deploy (Manual)
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'develop'
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
  IMAGE_TAG: ${{ github.sha }}
jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-20.04
    environment:
      name: Development
    steps:
    - name: Information
      env:
        BRANCH: ${{ github.event.inputs.branch }}
      run: |
        if [ -n "$BRANCH" ]
        then
          echo Deploying "$BRANCH" for "$DEPLOYMENT_NAME"
        else
          echo Deploying default branch for "$DEPLOYMENT_NAME"
        fi
    - name: Build - Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Build - Git Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}
        persist-credentials: false
    - name: Build - Get ECR Repository
      run: |
        aws ecr describe-repositories --region $AWS_REGION --repository-names $ECR_REPOSITORY > /dev/null 2>&1 || \
          aws ecr create-repository --region $AWS_REGION  --repository-name $ECR_REPOSITORY
    - name: Build - Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build - Build and push image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        sed -i s~#base-image#~${{ secrets.BASE_IMAGE }}~g Dockerfile
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY -a
    - name: Deploy - Setup Credentials
      id: setup-kubeconfig
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
    - name: Deploy - Update Kubernetes Deployment
      id: deploy-to-eks
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        HEALTH_CHECK_URL: ${{ secrets.HEALTH_CHECK_URL }}
        CONFIGMAP: ${{ secrets.CONFIGMAP }}
      run: |
        kubectl apply -f - <<< "$CONFIGMAP"
        helm upgrade -i "$DEPLOYMENT_NAME" helm/. \
          --set "image.repository=$ECR_REGISTRY/$ECR_REPOSITORY" \
          --set "image.livenessProbe.path=$HEALTH_CHECK_URL" \
          --set "image.readinessProbe.path=$HEALTH_CHECK_URL" \
          --set "istio_url=profile.${{ secrets.HOST_ZONE }}"
        kubectl rollout status "deployment/$DEPLOYMENT_NAME"
